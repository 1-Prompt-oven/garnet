"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3881],{4154:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=t(5893),r=t(1151);const i={id:"security",sidebar_label:"Security",title:"Securing your Garnet Deployment",slug:"/security"},a=void 0,o={id:"getting-started/security",title:"Securing your Garnet Deployment",description:"Garnet supports TLS/SSL connections using the SslStream capability built into .NET. You can enable end to end encryption using this functionality, discussed next. Garnet also supports basic password-based authentication on the wire, following the AUTH command in RESP, this is discussed at the end of the section.",source:"@site/docs/getting-started/security.md",sourceDirName:"getting-started",slug:"/security",permalink:"/docs/security",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/Garnet/tree/main/website/docs/getting-started/security.md",tags:[],version:"current",frontMatter:{id:"security",sidebar_label:"Security",title:"Securing your Garnet Deployment",slug:"/security"},sidebar:"garnetDocSidebar",previous:{title:"Configuration",permalink:"/docs/getting-started/configuration"},next:{title:"Overview",permalink:"/docs/benchmarking/overview"}},c={},l=[{value:"TLS Configuration",id:"tls-configuration",level:2},{value:"Using GarnetServer with TLS",id:"using-garnetserver-with-tls",level:2},{value:"Using a resp-compatible client with TLS",id:"using-a-resp-compatible-client-with-tls",level:2},{value:"Generating your own self-signed certificates",id:"generating-your-own-self-signed-certificates",level:2},{value:"Exporting certs separately with openssl",id:"exporting-certs-separately-with-openssl",level:2},{value:"Password Protected Sessions",id:"password-protected-sessions",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Garnet supports TLS/SSL connections using the SslStream capability built into .NET. You can enable end to end encryption using this functionality, discussed next. Garnet also supports basic password-based authentication on the wire, following the AUTH command in RESP, this is discussed at the end of the section."}),"\n",(0,s.jsx)(n.h2,{id:"tls-configuration",children:"TLS Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["In order to use Garnet with TLS, you can either create your own certificates or use our test certificate files (located at ",(0,s.jsx)(n.code,{children:"<root>/test/testcerts"}),"), to start both the server and the client for all the connections with TLS encryption."]}),"\n",(0,s.jsx)(n.h2,{id:"using-garnetserver-with-tls",children:"Using GarnetServer with TLS"}),"\n",(0,s.jsx)(n.p,{children:"On the server side, you need to start Garnet with TLS enabled."}),"\n",(0,s.jsx)(n.p,{children:'From a command prompt, the parameters to add is "--tls". You specify the details such as TLS certificate file name (.pfx) via --cert-file-name, TLS certificate password via --cert-password, whether TLS client certificate required via --clientcertificaterequired, and whether TLS checks certificate revocation via --checkcertificaterevocation.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    GarnetServer --tls --cert-file-name testcert.pfx --cert-password placeholder\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you host your own GarnetServer via NuGet, you can specify the SSL connection options directly by passing in TlsOptions, of the standard C# SslStream type SslServerAuthenticationOptions."}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"In the case that you have the private and public key files and you need the pfx format use openssl with the following command:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    openssl pkcs12 -inkey <server-name>.key -in <server-name>.crt -export -out server-cert.pfx\n"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Note:"})}),"\n",(0,s.jsxs)(n.p,{children:["The repository contains a pfx file under the path ",(0,s.jsx)(n.code,{children:"<root>/test/testcerts"}),". If needed, use the testcert.pfx file with the password ",(0,s.jsx)(n.code,{children:"placeholder"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The provided certificates in Garnet repository are self-signed and, are not trusted by default."}),"\n",(0,s.jsx)(n.p,{children:"Also, they may use outdated hash and cipher suites that may not be strong."}),"\n",(0,s.jsx)(n.p,{children:"For better security, purchase a certificate signed by a well-known certificate authority."}),"\n",(0,s.jsx)(n.p,{children:"These certificates should be used ONLY on dev/test environments."}),"\n",(0,s.jsx)(n.h2,{id:"using-a-resp-compatible-client-with-tls",children:"Using a resp-compatible client with TLS"}),"\n",(0,s.jsx)(n.p,{children:"To connect a resp client with Garnet, you need a server cert, a private key and a ca cert files."}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.p,{children:"Provide the following parameters when starting a client:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    --cacert garnet-ca.crt\n    --cert garnet-cert.crt \n    --key garnet.key\n"})}),"\n",(0,s.jsx)(n.h2,{id:"generating-your-own-self-signed-certificates",children:"Generating your own self-signed certificates"}),"\n",(0,s.jsx)(n.p,{children:"Follow these steps, if you need to generate a self-signed certificate for testing TLS with Garnet Server."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install openssl library"}),"\n",(0,s.jsx)(n.p,{children:"For Linux distributions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt install openssl\n"})}),"\n",(0,s.jsx)(n.p,{children:"For Windows systems:"}),"\n",(0,s.jsxs)(n.p,{children:["Pick the most suitable option from ",(0,s.jsx)(n.a,{href:"https://wiki.openssl.org/index.php/Binaries",children:"OpenSSL wiki"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the following commands:"}),"\n",(0,s.jsx)(n.p,{children:"2.1 Create the root key"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl ecparam -out <issuer-name>.key -name prime256v1 -genkey\n"})}),"\n",(0,s.jsx)(n.p,{children:"2.2 Create the root certificate and self-sign it:"}),"\n",(0,s.jsx)(n.p,{children:"Use the following command to generate the Certificate Signing Request (CSR)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -new -sha256 -key <issuer-name>.key -out <issuer-name>.csr\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: When prompted, type the password for the root key, and the organizational information for the custom CA such as Country/Region, State, Org, OU, and the name of the issuer."}),"\n",(0,s.jsx)(n.p,{children:"Use the following command to generate the Root Certificate:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl x509 -req -sha256 -days 365 -in <issuer-name>.csr -signkey <issuer-name>.key -out <issuer-name>.crt\n"})}),"\n",(0,s.jsx)(n.p,{children:"This create will be used to sign your server certificate."}),"\n",(0,s.jsx)(n.p,{children:"2.3 Create the certificate's key"}),"\n",(0,s.jsx)(n.p,{children:"Note: This server name must be different from the issuer's name."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl ecparam -out <server-name>.key -name prime256v1 -genkey\n"})}),"\n",(0,s.jsx)(n.p,{children:"2.4  Create the CSR (Certificate Signing Request)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -new -sha256 -key <server-name>.key -out <server-name>.csr\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: When prompted, type the password for the root key, and the organizational information for the custom CA: Country/Region, State, Org, OU, and the fully qualified domain name."}),"\n",(0,s.jsx)(n.p,{children:"This is the domain of the server and it should be different from the issuer."}),"\n",(0,s.jsx)(n.p,{children:"2.5 Generate the certificate with the CSR and the key and sign it with the CA's root key"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl x509 -req -in <server-name>.csr -CA <issuer-name>.crt -CAkey <issuer-name>.key -CAcreateserial -out <server-name>.crt -days 365 -sha256\n"})}),"\n",(0,s.jsx)(n.p,{children:"2.6 Verify the newly created certificate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl x509 -in <server-name>.crt -text -noout\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will show you the certificate with the information you entered and you will aslo see the Issuer data and the Subject (server name)."}),"\n",(0,s.jsx)(n.p,{children:"2.7 Verify the files in your directory, and ensure you have the following files:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<issuer-name>"}),".crt"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<issuer-name>"}),".key"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<server-name>"}),".crt"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<server-name>"}),".key"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"exporting-certs-separately-with-openssl",children:"Exporting certs separately with openssl"}),"\n",(0,s.jsx)(n.p,{children:"If you have a certificate in a pfx format, you can extract all the certs and keys using openssl tool:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Key"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl pkcs12 -in testcert.pfx -nocerts -nodes -out garnet.key\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Certificate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl pkcs12 -in testcert.pfx -clcerts -nokeys -out garnet-cert.crt\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"CA cacert"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl pkcs12 -in testcert.pfx -cacerts -nokeys -chain -out garnet-ca.crt \n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"password-protected-sessions",children:"Password Protected Sessions"}),"\n",(0,s.jsx)(n.p,{children:"Garnet support password protected sessions, using the AUTH mechanism of the RESP protocol. When you create a Garnet server, you can specify enabling authentication via the flag --auth and the type of authentication you want to enable. The following are the options to enable or disable password protected connections:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"NoAuth, by default there is no password requirement."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    GarnetServer --auth NoAuth\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Password, indicates to the server that clients should use ",(0,s.jsx)(n.strong,{children:"auth"})," command and a password, before sending requests."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Start the server including the password:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    GarnetServer --auth Password --password <passwordplaceholder>\n"})}),"\n",(0,s.jsx)(n.p,{children:"With these two features, you can get a basic security capability with your Garnet deployment. Please check with your team's security requirements whether this functionality is sufficient to match your needs. Note that if larger-than-memory data is enabled, we do not encrypt the data that spills to local disk, or the checkpoints. Like Redis, we also do not encrypt the actual data served in memory."})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(7294);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);